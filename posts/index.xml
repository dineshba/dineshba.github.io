<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Today I Learnt</title>
    <link>https://dineshba.github.io/posts/</link>
    <description>Recent content in Posts on Today I Learnt</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 31 Aug 2019 00:50:33 +0530</lastBuildDate>
    
	<atom:link href="https://dineshba.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Theme of my website</title>
      <link>https://dineshba.github.io/posts/theme/</link>
      <pubDate>Sat, 31 Aug 2019 00:50:33 +0530</pubDate>
      
      <guid>https://dineshba.github.io/posts/theme/</guid>
      <description>Backbone of my website: I am using hugo to build this website. Thanks to Aswin Karthik for his blog by which I setup this website. Just write markdown files and push, and travis-ci will publish your website. So cool !!!.
There are lot of themes available here. After some search, I landed to current theme which is hyde. I really liked the theme and it saved lot of my time.</description>
    </item>
    
    <item>
      <title>How I am using fzf for every 5 min of my programming life</title>
      <link>https://dineshba.github.io/posts/fzf/</link>
      <pubDate>Sat, 31 Aug 2019 00:41:10 +0530</pubDate>
      
      <guid>https://dineshba.github.io/posts/fzf/</guid>
      <description>Installation for new users $ brew install fzf $ $(brew --prefix)/opt/fzf/install # useful key bindings and fuzzy completion   Note: Its better to use key bindings and fuzzy completion
 Default options that I use export FZF_DEFAULT_OPTS=&#39;--height 40% --reverse --border&#39;  My usages To Search in command history: CTRL + R
To Change directory: cd + (CTRL + T) # type cd and then press CTRL plus T or cd ** + TAB  To find and open files in vim(or any editor): vim $(fzf) vim + (CTRL + T) vim ** + TAB vim $(fzf --preview &#39;cat {}&#39;)   You can even search and open multiple files using tab</description>
    </item>
    
    <item>
      <title>Super cool exec command</title>
      <link>https://dineshba.github.io/posts/exec/</link>
      <pubDate>Tue, 27 Aug 2019 22:56:45 +0530</pubDate>
      
      <guid>https://dineshba.github.io/posts/exec/</guid>
      <description>exec (built-in command) We can use exec for two use cases (as far as I learned today :-P)
To create independent shell from current shell Usual way:
$ bash # created a bash shell $ #do whatever you wanted $ exit # will go back to the shell which it created  Using exec:
$ exec bash #created a bash shell and killed the current shell $ #do whatever you wanted $ exit # will not go back to the shell which it created.</description>
    </item>
    
  </channel>
</rss>